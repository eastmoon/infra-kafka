# Docker-Compose document
# Ref : https://docs.docker.com/compose/compose-file/

services:
  kafka-broker:
    build:
      context: kafka
    container_name: docker-kafka-broker_${PROJECT_NAME}
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
      - 9094:9094
    environment:
      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: HOST://:9092, CONTROLLER://:9093, SSL://:9094, SASL_PLAINTEXT://:9095
      KAFKA_ADVERTISED_LISTENERS: HOST://:9092, CONTROLLER://:9093, SSL://:9094, SASL_PLAINTEXT://:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: HOST:PLAINTEXT, CONTROLLER:PLAINTEXT, SSL:SSL, SASL_PLAINTEXT:SASL_PLAINTEXT
      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: HOST
      # Listener to use for controller-to-broker communication
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-broker:9093
      # Setting replication factor, this number must same with node amount.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # SASL configuration
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/configs/kafka-server-jass.conf"
      # SSL configuration
      KAFKA_SECURITY_PROTOCOL: SSL
      KAFKA_SSL_KEYSTORE_FILENAME: kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_KEY_CREDENTIALS: cert_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: kafka.server.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: cert_creds
      KAFKA_SSL_CLIENT_AUTH: 'required'
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM:
    volumes:
      - ${CACHE_DIR}/certs:/etc/kafka/secrets
      - ${APP_DIR}/security/kafka-server-jass.conf:/etc/kafka/configs/kafka-server-jass.conf
    networks:
      - kafka-net
    working_dir: /opt/kafka/bin

  kafka-client:
    build:
      context: kafka
    container_name: docker-kafka-client_${PROJECT_NAME}
    volumes:
      - ${APP_DIR}/security:/app
      - ${CACHE_DIR}/certs:/certs
    networks:
      - kafka-net
    working_dir: /opt/kafka/bin
    command: ["sleep", "infinity"]

  kafka-client-sdk:
    build:
      context: sdk-c
    container_name: docker-kafka-client-c_${PROJECT_NAME}
    volumes:
      - ${APP_DIR}/client-c:/app
    networks:
      - kafka-net
    command: ["sleep", "infinity"]

  kafka-client-python:
    build:
      context: sdk-python
    container_name: docker-kafka-client-python_${PROJECT_NAME}
    volumes:
      - ${APP_DIR}/client-python:/app
    networks:
      - kafka-net
    command: ["sleep", "infinity"]

  kafka-connect-file:
    build:
      context: kafka
    container_name: docker-kafka-connect-file_${PROJECT_NAME}
    volumes:
      - ${APP_DIR}/connect-file:/app
      - ${CACHE_DIR}/connect-file:/data
    ports:
      - 8083:8083
    networks:
      - kafka-net
    working_dir: /opt/kafka/bin
    command: ["bash", "connect-standalone.sh", "/app/connect-standalone.properties", "/app/connect-source.properties", "/app/connect-sink.properties"]

networks:
  kafka-net:
    driver: bridge
